{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsw93\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\WorkLog\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { SideMenu, Contents, Modal } from './component';\nimport { $useArray, $useStringDate } from './hook/';\nimport { faHome, faUser, faClipboard, faBell, faCogs } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext({});\nconst databaseURL = `https://sanguk-db-default-rtdb.firebaseio.com`;\n\nconst Component = () => {\n  _s();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [mainColor, setMainColor] = useState('#338f6c');\n  const [programName, setProgramName] = useState('Work Station');\n  const [menus, setMenus] = useState({\n    main: [{\n      id: 0,\n      name: 'Home',\n      icon: faHome,\n      link: '/'\n    }, {\n      id: 1,\n      name: 'Work Log',\n      icon: faClipboard,\n      link: '/WorkLog'\n    }, {\n      id: 2,\n      name: 'User List',\n      icon: faUser,\n      link: '/UserList'\n    }],\n    sub: [{\n      id: 3,\n      name: 'Support',\n      icon: faBell,\n      link: '/Support'\n    }, {\n      id: 4,\n      name: 'Setting',\n      icon: faCogs,\n      link: '/Setting'\n    }]\n  });\n  const [userList, setUserList] = useState([]);\n\n  const _GET_USERLIST = useCallback(() => {\n    fetch(`${databaseURL}/userList.json`).then(res => {\n      if (res.status !== 200) {\n        console.error('서버에러!!');\n        return;\n      }\n\n      return res.json();\n    }).then(data => {\n      var _$useArray;\n\n      setUserList((_$useArray = $useArray(data)) !== null && _$useArray !== void 0 ? _$useArray : []); // setTimeout(() => setLoading(false), 500);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [setUserList]);\n\n  let date = new Date();\n  console.log($useStringDate(date));\n  useEffect(() => {\n    _GET_USERLIST();\n  }, [_GET_USERLIST]);\n  useEffect(() => {\n    console.log('유저정보가 최신화되었습니다.', userList);\n  }, [userList]);\n  return /*#__PURE__*/_jsxDEV(App, {\n    mainColor: mainColor,\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        databaseURL,\n        userList,\n        setUserList,\n        menus,\n        setMenus,\n        mainColor,\n        setMainColor,\n        modalOpen,\n        setModalOpen,\n        programName,\n        setProgramName\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        id: \"title\",\n        children: programName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        modalOpen: modalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n        programName: programName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Component, \"eOXcHnsDLMXT+BbrsZaJFeotdAU=\");\n\n_c = Component;\nexport default Component; // Style\n\nconst App = Styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  background: ${props => props.mainColor};\n  border-radius: 26px;\n`;\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/jsw93/OneDrive/바탕 화면/WorkLog/src/App.js"],"names":["React","useState","useCallback","useEffect","Styled","SideMenu","Contents","Modal","$useArray","$useStringDate","faHome","faUser","faClipboard","faBell","faCogs","Context","createContext","databaseURL","Component","modalOpen","setModalOpen","mainColor","setMainColor","programName","setProgramName","menus","setMenus","main","id","name","icon","link","sub","userList","setUserList","_GET_USERLIST","fetch","then","res","status","console","error","json","data","catch","date","Date","log","App","div","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,KAA7B,QAA0C,aAA1C;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,SAA1C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,WAAzB,EAAsCC,MAAtC,EAA8CC,MAA9C,QAA4D,mCAA5D;;AAEA,OAAO,MAAMC,OAAO,gBAAGf,KAAK,CAACgB,aAAN,CAAoB,EAApB,CAAhB;AACP,MAAMC,WAAW,GAAI,+CAArB;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,SAAD,CAA1C;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,cAAD,CAA9C;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC;AACjC0B,IAAAA,IAAI,EAAE,CACJ;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,MAAd;AAAsBC,MAAAA,IAAI,EAAEpB,MAA5B;AAAoCqB,MAAAA,IAAI,EAAE;AAA1C,KADI,EAEJ;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,UAAd;AAA0BC,MAAAA,IAAI,EAAElB,WAAhC;AAA6CmB,MAAAA,IAAI,EAAE;AAAnD,KAFI,EAGJ;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,WAAd;AAA2BC,MAAAA,IAAI,EAAEnB,MAAjC;AAAyCoB,MAAAA,IAAI,EAAE;AAA/C,KAHI,CAD2B;AAMjCC,IAAAA,GAAG,EAAE,CACH;AAACJ,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,SAAd;AAAyBC,MAAAA,IAAI,EAAEjB,MAA/B;AAAuCkB,MAAAA,IAAI,EAAE;AAA7C,KADG,EAEH;AAACH,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,IAAI,EAAE,SAAd;AAAyBC,MAAAA,IAAI,EAAEhB,MAA/B;AAAuCiB,MAAAA,IAAI,EAAE;AAA7C,KAFG;AAN4B,GAAD,CAAlC;AAWA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMkC,aAAa,GAAGjC,WAAW,CAAC,MAAM;AACtCkC,IAAAA,KAAK,CAAE,GAAEnB,WAAY,gBAAhB,CAAL,CAAsCoB,IAAtC,CAA2CC,GAAG,IAAI;AAChD,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,QAAAA,OAAO,CAACC,KAAR,CAAc,QAAd;AACA;AACD;;AACD,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,KAND,EAMGL,IANH,CAMQM,IAAI,IAAI;AAAA;;AACdT,MAAAA,WAAW,eAAC1B,SAAS,CAACmC,IAAD,CAAV,mDAAoB,EAApB,CAAX,CADc,CAEd;AACD,KATD,EASGC,KATH,CASUH,KAAD,IAAW;AAClBD,MAAAA,OAAO,CAACC,KAAR,CAAcA,KAAd;AACD,KAXD;AAYD,GAbgC,EAa9B,CAACP,WAAD,CAb8B,CAAjC;;AAeA,MAAIW,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAN,EAAAA,OAAO,CAACO,GAAR,CAAYtC,cAAc,CAACoC,IAAD,CAA1B;AAEA1C,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAGAhC,EAAAA,SAAS,CAAC,MAAM;AACdqC,IAAAA,OAAO,CAACO,GAAR,CAAY,iBAAZ,EAA+Bd,QAA/B;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAMA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEZ,SAAhB;AAAA,2BACE,QAAC,OAAD,CAAS,QAAT;AACE,MAAA,KAAK,EAAE;AACLJ,QAAAA,WADK;AAELgB,QAAAA,QAFK;AAEKC,QAAAA,WAFL;AAGLT,QAAAA,KAHK;AAGEC,QAAAA,QAHF;AAILL,QAAAA,SAJK;AAIMC,QAAAA,YAJN;AAKLH,QAAAA,SALK;AAKMC,QAAAA,YALN;AAMLG,QAAAA,WANK;AAMQC,QAAAA;AANR,OADT;AAAA,8BAUE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAA,kBAAmBD;AAAnB;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAEI;AAAvB;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAhED;;GAAML,S;;KAAAA,S;AAkEN,eAAeA,SAAf,C,CAEA;;AACA,MAAM8B,GAAG,GAAG5C,MAAM,CAAC6C,GAAI;AACvB;AACA;AACA;AACA,gBAAiBC,KAAD,IAAWA,KAAK,CAAC7B,SAAU;AAC3C;AACA,CANA;MAAM2B,G","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { SideMenu, Contents, Modal } from './component';\nimport { $useArray, $useStringDate } from './hook/';\nimport { faHome, faUser, faClipboard, faBell, faCogs } from '@fortawesome/free-solid-svg-icons';\n\nexport const Context = React.createContext({});\nconst databaseURL = `https://sanguk-db-default-rtdb.firebaseio.com`;\nconst Component = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [mainColor, setMainColor] = useState('#338f6c');\n  const [programName, setProgramName] = useState('Work Station');\n  const [menus, setMenus] = useState({\n    main: [\n      {id: 0, name: 'Home', icon: faHome, link: '/'},\n      {id: 1, name: 'Work Log', icon: faClipboard, link: '/WorkLog'},\n      {id: 2, name: 'User List', icon: faUser, link: '/UserList'}\n    ],\n    sub: [\n      {id: 3, name: 'Support', icon: faBell, link: '/Support'},\n      {id: 4, name: 'Setting', icon: faCogs, link: '/Setting'}\n    ]\n  });\n  const [userList, setUserList] = useState([]);\n\n  const _GET_USERLIST = useCallback(() => {\n    fetch(`${databaseURL}/userList.json`).then(res => {\n      if (res.status !== 200) {\n        console.error('서버에러!!');\n        return;\n      }\n      return res.json();\n    }).then(data => {\n      setUserList($useArray(data) ?? []);\n      // setTimeout(() => setLoading(false), 500);\n    }).catch((error) => {\n      console.error(error);\n    });\n  }, [setUserList]);\n\n  let date = new Date();\n  console.log($useStringDate(date))\n\n  useEffect(() => {\n    _GET_USERLIST();\n  }, [_GET_USERLIST]);\n  useEffect(() => {\n    console.log('유저정보가 최신화되었습니다.', userList);\n  }, [userList]);\n\n\n\n  return (\n    <App mainColor={mainColor}>\n      <Context.Provider\n        value={{\n          databaseURL,\n          userList, setUserList,\n          menus, setMenus,\n          mainColor, setMainColor,\n          modalOpen, setModalOpen,\n          programName, setProgramName,\n        }}\n      >\n        <title id=\"title\">{programName}</title>\n        <Modal modalOpen={modalOpen}/>\n        <SideMenu programName={programName} />\n        <Contents />\n      </Context.Provider>\n    </App>\n  );\n  \n}\n\nexport default Component;\n\n// Style\nconst App = Styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  background: ${(props) => props.mainColor};\n  border-radius: 26px;\n`;\n"]},"metadata":{},"sourceType":"module"}