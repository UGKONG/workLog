{"ast":null,"code":"export const $useGet = (url = '', callback) => {\n  let data = [];\n  fetch(url).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(resData => {\n    data = resData !== null && resData !== void 0 ? resData : [];\n    callback({\n      data: data\n    });\n  });\n};\nexport const $usePost = (url = '', newData, callback) => {\n  let data = [];\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(newData)\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(() => {\n    data = newData;\n    callback({\n      data: data\n    });\n  });\n};\nexport const $usePut = (url = '', newData, callback) => {\n  let data = [];\n  fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(newData)\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(() => {\n    data = newData;\n    callback({\n      data: data\n    });\n  });\n};\nexport const $useDelete = (url = '', callback) => {\n  fetch(url, {\n    method: 'DELETE'\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(() => {\n    callback();\n  });\n};","map":{"version":3,"sources":["/Users/jeonsang-ug/Desktop/웹개발/프론트엔드/workLog/src/hook/useFirebase.jsx"],"names":["$useGet","url","callback","data","fetch","then","res","status","console","error","json","resData","$usePost","newData","method","body","JSON","stringify","$usePut","$useDelete"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,GAAG,GAAG,EAAP,EAAWC,QAAX,KAAwB;AAC7C,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgBC,GAAG,IAAI;AACrB,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GAND,EAMGL,IANH,CAMQM,OAAO,IAAI;AACjBR,IAAAA,IAAI,GAAGQ,OAAH,aAAGA,OAAH,cAAGA,OAAH,GAAc,EAAlB;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEA;AAAP,KAAD,CAAR;AACD,GATD;AAUD,CAZM;AAcP,OAAO,MAAMS,QAAQ,GAAG,CAACX,GAAG,GAAG,EAAP,EAAWY,OAAX,EAAoBX,QAApB,KAAiC;AACvD,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,KAAK,CAACH,GAAD,EAAM;AACTa,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAFG,GAAN,CAAL,CAGGR,IAHH,CAGQC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GATD,EASGL,IATH,CASQ,MAAM;AACZF,IAAAA,IAAI,GAAGU,OAAP;AACAX,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEA;AAAP,KAAD,CAAR;AACD,GAZD;AAaD,CAfM;AAiBP,OAAO,MAAMe,OAAO,GAAG,CAACjB,GAAG,GAAG,EAAP,EAAWY,OAAX,EAAoBX,QAApB,KAAiC;AACtD,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,KAAK,CAACH,GAAD,EAAM;AACTa,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAFG,GAAN,CAAL,CAGGR,IAHH,CAGQC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GATD,EASGL,IATH,CASQ,MAAM;AACZF,IAAAA,IAAI,GAAGU,OAAP;AACAX,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEA;AAAP,KAAD,CAAR;AACD,GAZD;AAaD,CAfM;AAiBP,OAAO,MAAMgB,UAAU,GAAG,CAAClB,GAAG,GAAG,EAAP,EAAWC,QAAX,KAAwB;AAChDE,EAAAA,KAAK,CAACH,GAAD,EAAM;AACTa,IAAAA,MAAM,EAAE;AADC,GAAN,CAAL,CAEGT,IAFH,CAEQC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GARD,EAQGL,IARH,CAQQ,MAAM;AACZH,IAAAA,QAAQ;AACT,GAVD;AAWD,CAZM","sourcesContent":["export const $useGet = (url = '', callback) => {\n  let data = [];\n  fetch(url).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n    return res.json();\n  }).then(resData => {\n    data = resData ?? [];\n    callback({data: data});\n  });\n}\n\nexport const $usePost = (url = '', newData, callback) => {\n  let data = [];\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(newData)\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n    return res.json();\n  }).then(() => {\n    data = newData;\n    callback({data: data});\n  })\n}\n\nexport const $usePut = (url = '', newData, callback) => {\n  let data = [];\n  fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(newData)\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n    return res.json();\n  }).then(() => {\n    data = newData;\n    callback({data: data});\n  })\n}\n\nexport const $useDelete = (url = '', callback) => {\n  fetch(url, {\n    method: 'DELETE'\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n    return res.json();\n  }).then(() => {\n    callback();\n  })\n}"]},"metadata":{},"sourceType":"module"}