{"ast":null,"code":"export const $useGet = (url = '', callback) => {\n  let data = [];\n  fetch(url).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(resData => {\n    data = resData !== null && resData !== void 0 ? resData : [];\n    console.log(data);\n    callback({\n      data: data\n    });\n  });\n};\nexport const $usePost = (url = '', newData, callback) => {\n  let data = [];\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(newData)\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(() => {\n    data = newData;\n    callback({\n      data: data\n    });\n  });\n};\nexport const $usePut = (url = '', newData, callback) => {\n  let data = [];\n  fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(newData)\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(() => {\n    data = newData;\n    callback({\n      data: data\n    });\n  });\n};\nexport const $useDelete = (url = '', callback) => {\n  fetch(url, {\n    method: 'DELETE'\n  }).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(() => {\n    callback();\n  });\n};","map":{"version":3,"sources":["C:/Users/jsw93/OneDrive/바탕 화면/WorkLog/src/hook/useFirebase.jsx"],"names":["$useGet","url","callback","data","fetch","then","res","status","console","error","json","resData","log","$usePost","newData","method","body","JSON","stringify","$usePut","$useDelete"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,GAAG,GAAG,EAAP,EAAWC,QAAX,KAAwB;AAC7C,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgBC,GAAG,IAAI;AACrB,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GAND,EAMGL,IANH,CAMQM,OAAO,IAAI;AACjBR,IAAAA,IAAI,GAAGQ,OAAH,aAAGA,OAAH,cAAGA,OAAH,GAAc,EAAlB;AACAH,IAAAA,OAAO,CAACI,GAAR,CAAYT,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEA;AAAP,KAAD,CAAR;AACD,GAVD;AAWD,CAbM;AAeP,OAAO,MAAMU,QAAQ,GAAG,CAACZ,GAAG,GAAG,EAAP,EAAWa,OAAX,EAAoBZ,QAApB,KAAiC;AACvD,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,KAAK,CAACH,GAAD,EAAM;AACTc,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAFG,GAAN,CAAL,CAGGT,IAHH,CAGQC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GATD,EASGL,IATH,CASQ,MAAM;AACZF,IAAAA,IAAI,GAAGW,OAAP;AACAZ,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEA;AAAP,KAAD,CAAR;AACD,GAZD;AAaD,CAfM;AAiBP,OAAO,MAAMgB,OAAO,GAAG,CAAClB,GAAG,GAAG,EAAP,EAAWa,OAAX,EAAoBZ,QAApB,KAAiC;AACtD,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,KAAK,CAACH,GAAD,EAAM;AACTc,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAFG,GAAN,CAAL,CAGGT,IAHH,CAGQC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GATD,EASGL,IATH,CASQ,MAAM;AACZF,IAAAA,IAAI,GAAGW,OAAP;AACAZ,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEA;AAAP,KAAD,CAAR;AACD,GAZD;AAaD,CAfM;AAiBP,OAAO,MAAMiB,UAAU,GAAG,CAACnB,GAAG,GAAG,EAAP,EAAWC,QAAX,KAAwB;AAChDE,EAAAA,KAAK,CAACH,GAAD,EAAM;AACTc,IAAAA,MAAM,EAAE;AADC,GAAN,CAAL,CAEGV,IAFH,CAEQC,GAAG,IAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAER,GAAI,eAArB;AACA;AACD;;AACD,WAAOK,GAAG,CAACI,IAAJ,EAAP;AACD,GARD,EAQGL,IARH,CAQQ,MAAM;AACZH,IAAAA,QAAQ;AACT,GAVD;AAWD,CAZM","sourcesContent":["export const $useGet = (url = '', callback) => {\r\n  let data = [];\r\n  fetch(url).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(resData => {\r\n    data = resData ?? [];\r\n    console.log(data);\r\n    callback({data: data});\r\n  });\r\n}\r\n\r\nexport const $usePost = (url = '', newData, callback) => {\r\n  let data = [];\r\n  fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify(newData)\r\n  }).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(() => {\r\n    data = newData;\r\n    callback({data: data});\r\n  })\r\n}\r\n\r\nexport const $usePut = (url = '', newData, callback) => {\r\n  let data = [];\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(newData)\r\n  }).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(() => {\r\n    data = newData;\r\n    callback({data: data});\r\n  })\r\n}\r\n\r\nexport const $useDelete = (url = '', callback) => {\r\n  fetch(url, {\r\n    method: 'DELETE'\r\n  }).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(() => {\r\n    callback();\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}