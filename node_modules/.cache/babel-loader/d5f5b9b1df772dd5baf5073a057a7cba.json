{"ast":null,"code":"var _jsxFileName = \"/Users/jeonsang-ug/Desktop/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF/\\u1111\\u1173\\u1105\\u1169\\u11AB\\u1110\\u1173\\u110B\\u1166\\u11AB\\u1103\\u1173/workLog/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { SideMenu, Contents } from './component';\nimport { $useArray } from './hook';\nimport { faHome, faUser, faClipboard, faBell, faCogs } from '@fortawesome/free-solid-svg-icons';\nimport { $useGet } from './hook/useFirebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext({});\nconst colorList = ['#B71C1C', '#FF6600', '#FFD600', '#00C853', '#338f6c', '#0099FF', '#6200EA', '#FF0084', '#3E2723', '#212121'];\nconst DB_URL = `https://sanguk-db-default-rtdb.firebaseio.com`;\n\nconst Component = () => {\n  _s();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [mainColor, setMainColor] = useState('#338f6c');\n  const [programName, setProgramName] = useState('Work Station');\n  const [menus, setMenus] = useState({\n    main: [{\n      id: 0,\n      name: 'Home',\n      icon: faHome,\n      link: '/'\n    }, {\n      id: 1,\n      name: 'Work Log',\n      icon: faClipboard,\n      link: '/WorkLog'\n    }, {\n      id: 2,\n      name: 'User List',\n      icon: faUser,\n      link: '/UserList'\n    }],\n    sub: [{\n      id: 3,\n      name: 'Support',\n      icon: faBell,\n      link: '/Support'\n    }, {\n      id: 4,\n      name: 'Setting',\n      icon: faCogs,\n      link: '/Setting'\n    }]\n  });\n  const [userList, setUserList] = useState([]);\n\n  const _GET_USERLIST = useCallback(() => {\n    $useGet(`${DB_URL}/workLog/userList.json`, ({\n      data\n    }) => {\n      setUserList($useArray(data));\n    });\n  }, []);\n\n  useEffect(() => {\n    _GET_USERLIST();\n  }, [_GET_USERLIST]);\n  useEffect(() => {\n    setModalOpen(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(App, {\n    mainColor: mainColor,\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        DB_URL,\n        colorList,\n        userList,\n        setUserList,\n        menus,\n        setMenus,\n        mainColor,\n        setMainColor,\n        modalOpen,\n        setModalOpen,\n        programName,\n        setProgramName\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        id: \"title\",\n        children: programName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n        programName: programName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Component, \"eOXcHnsDLMXT+BbrsZaJFeotdAU=\");\n\n_c = Component;\nexport default Component; // Style\n\nconst App = Styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  background: ${props => props.mainColor};\n  border-radius: 26px;\n`;\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/jeonsang-ug/Desktop/웹개발/프론트엔드/workLog/src/App.js"],"names":["React","useState","useCallback","useEffect","Styled","SideMenu","Contents","$useArray","faHome","faUser","faClipboard","faBell","faCogs","$useGet","Context","createContext","colorList","DB_URL","Component","modalOpen","setModalOpen","mainColor","setMainColor","programName","setProgramName","menus","setMenus","main","id","name","icon","link","sub","userList","setUserList","_GET_USERLIST","data","App","div","props"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { SideMenu, Contents } from './component';\nimport { $useArray } from './hook';\nimport { faHome, faUser, faClipboard, faBell, faCogs } from '@fortawesome/free-solid-svg-icons';\nimport { $useGet } from './hook/useFirebase';\n\nexport const Context = React.createContext({});\nconst colorList = ['#B71C1C', '#FF6600', '#FFD600', '#00C853', '#338f6c', '#0099FF', '#6200EA', '#FF0084', '#3E2723', '#212121'];\nconst DB_URL = `https://sanguk-db-default-rtdb.firebaseio.com`;\n\nconst Component = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [mainColor, setMainColor] = useState('#338f6c');\n  const [programName, setProgramName] = useState('Work Station');\n  const [menus, setMenus] = useState({\n    main: [\n      {id: 0, name: 'Home', icon: faHome, link: '/'},\n      {id: 1, name: 'Work Log', icon: faClipboard, link: '/WorkLog'},\n      {id: 2, name: 'User List', icon: faUser, link: '/UserList'}\n    ],\n    sub: [\n      {id: 3, name: 'Support', icon: faBell, link: '/Support'},\n      {id: 4, name: 'Setting', icon: faCogs, link: '/Setting'}\n    ]\n  });\n  const [userList, setUserList] = useState([]);\n\n  const _GET_USERLIST = useCallback(() => {\n    $useGet(`${DB_URL}/workLog/userList.json`, ({data}) => {\n      setUserList($useArray(data));\n    })\n  }, []);\n\n  useEffect(() => {\n    _GET_USERLIST();\n  }, [_GET_USERLIST]);\n\n  useEffect(() => {\n    setModalOpen(false);\n  }, []);\n\n  return (\n    <App mainColor={mainColor}>\n      <Context.Provider\n        value={{\n          DB_URL, colorList,\n          userList, setUserList,\n          menus, setMenus,\n          mainColor, setMainColor,\n          modalOpen, setModalOpen,\n          programName, setProgramName,\n        }}\n      >\n        <title id=\"title\">{programName}</title>\n        <SideMenu programName={programName} />\n        <Contents />\n      </Context.Provider>\n    </App>\n  );\n  \n}\n\nexport default Component;\n\n// Style\nconst App = Styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  background: ${(props) => props.mainColor};\n  border-radius: 26px;\n`;\n"]},"metadata":{},"sourceType":"module"}