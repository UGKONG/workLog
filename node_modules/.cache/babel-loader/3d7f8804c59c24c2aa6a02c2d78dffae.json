{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst $useGet = (url = '') => {\n  _s();\n\n  const [result, setResult] = useState();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true); // const async = (url, callback) => {\n\n  fetch(url).then(res => {\n    if (res.status !== 200) {\n      console.error(`${url} Server Error`);\n      return;\n    }\n\n    return res.json();\n  }).then(data => {\n    setResult('Success');\n    setData(data);\n    setLoading(false);\n  }).catch(error => {\n    setResult('Fail');\n    setData(null);\n    setLoading(true);\n  }); // }\n  // useEffect(() => {\n  //   async();\n  // });\n\n  return [result, data, loading];\n};\n\n_s($useGet, \"9JsTJkcsgjFHgdner+81itUgYaE=\");\n\nexport default $useGet;","map":{"version":3,"sources":["C:/Users/jsw93/OneDrive/바탕 화면/WorkLog/src/hook/useGet.jsx"],"names":["useState","useEffect","$useGet","url","result","setResult","data","setData","loading","setLoading","fetch","then","res","status","console","error","json","catch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,GAAG,GAAG,EAAP,KAAc;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC,CAH4B,CAK5B;;AACEU,EAAAA,KAAK,CAACP,GAAD,CAAL,CAAWQ,IAAX,CAAgBC,GAAG,IAAI;AACrB,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,KAAR,CAAe,GAAEZ,GAAI,eAArB;AACA;AACD;;AACD,WAAOS,GAAG,CAACI,IAAJ,EAAP;AACD,GAND,EAMGL,IANH,CAMQL,IAAI,IAAI;AACdD,IAAAA,SAAS,CAAC,SAAD,CAAT;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AAED,GAXD,EAWGQ,KAXH,CAWUF,KAAD,IAAW;AAClBV,IAAAA,SAAS,CAAC,MAAD,CAAT;AACAE,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AAED,GAhBD,EAN0B,CAuB5B;AAEA;AACA;AACA;;AAEA,SAAO,CAACL,MAAD,EAASE,IAAT,EAAeE,OAAf,CAAP;AACD,CA9BD;;GAAMN,O;;AAgCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst $useGet = (url = '') => {\r\n  const [result, setResult] = useState();\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // const async = (url, callback) => {\r\n    fetch(url).then(res => {\r\n      if (res.status !== 200) {\r\n        console.error(`${url} Server Error`);\r\n        return;\r\n      }\r\n      return res.json();\r\n    }).then(data => {\r\n      setResult('Success');\r\n      setData(data);\r\n      setLoading(false);\r\n\r\n    }).catch((error) => {\r\n      setResult('Fail');\r\n      setData(null);\r\n      setLoading(true);\r\n\r\n    });\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   async();\r\n  // });\r\n\r\n  return [result, data, loading];\r\n}\r\n\r\nexport default $useGet;"]},"metadata":{},"sourceType":"module"}