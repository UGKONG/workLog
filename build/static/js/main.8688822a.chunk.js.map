{"version":3,"sources":["component/Menu.jsx","component/SideMenu.jsx","component/contents/Home.jsx","component/contents/WorkLog/Log.jsx","component/Loading.jsx","hook/useArray.jsx","hook/useStringDate.jsx","hook/useFirebase.jsx","component/modal/CommonModal.jsx","component/modal/AddWorkLogModal.jsx","component/contents/WorkLog.jsx","component/contents/UserList.jsx","component/contents/Support.jsx","component/contents/Setting.jsx","component/Contents.jsx","App.js","reportWebVitals.js","index.js"],"names":["MenuUl","Styled","ul","MenuLi","li","App","menuCategory","menus","menuList","useMemo","map","menu","to","link","exact","activeClassName","icon","name","id","length","className","Header","div","Logo","h1","Component","programName","useContext","Context","Menu","main","sub","Home","Title","h2","Log","logData","_context","LogLi","date","title","category","userList","find","x","sq","user","reference","data","idx","faUser","style","fontSize","borderRadius","width","height","padding","color","marginRight","border","backgroundColor","colorList","Loading","LoadingLi","Circle","InCircle","CircleRotate","keyframes","$useArray","obj","_arr","_temp","Object","entries","forEach","push","$useStringDate","Y","String","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","$useGet","url","callback","fetch","then","res","status","json","console","error","resData","CommonModal","modal","getData","setData","Modal","ModalClose","setModalOpen","modalOpen","BlackBg","onClick","Pop","bgColor","mainColor","Xbtn","degDir","deg","Contents","AddWorkLogModal","titleInput","useRef","categoryInput","contentsInput","_POST_WORKLOG","useCallback","contents","current","value","Date","newData","method","body","JSON","stringify","$usePost","databaseURL","log","before","Line","ref","type","WorkLog","useState","workLog","setWorkLog","loading","setLoading","_GET_WORKLOG","addBoardBtnClick","useEffect","AddBtn","LogListHead","LogListBody","button","section","UserList","Support","Setting","Main","activeMenu","path","component","React","createContext","setMainColor","setProgramName","faHome","faClipboard","faBell","faCogs","setMenus","setUserList","_GET_USERLIST","Provider","SideMenu","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8688822a.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst App = ({ menuCategory, menus }) => {\r\n\r\n  const menuList = useMemo(() => {\r\n    return (\r\n      menus.map((menu) => {\r\n        return (\r\n          <MenuLi key={menu.id} >\r\n            <NavLink\r\n              to={menu.link}\r\n              exact={menu.link === '/'}\r\n              activeClassName=\"active\"\r\n            >\r\n              <i><FontAwesomeIcon icon={menu.icon} /></i>\r\n              {menu.name}\r\n            </NavLink>\r\n          </MenuLi>\r\n        )\r\n      })\r\n    )\r\n  }, [menus]);\r\n\r\n  if (menus.length === 0) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <MenuUl className={menuCategory}>\r\n      {menuList}\r\n    </MenuUl>\r\n  );\r\n}\r\n\r\nconst MenuUl = Styled.ul`\r\n  &.sub {\r\n    padding-top: 16px;\r\n    margin-top: 16px;\r\n    position: relative;\r\n    border-top: 1px solid #eeeeee50;\r\n  }\r\n`;\r\nconst MenuLi = Styled.li`\r\n\r\n  position: relative;\r\n\r\n  a {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: 'Baloo Tammudu 2',cursive;\r\n    text-align: left;\r\n    padding: 6px 10px 2px;\r\n    background-color: transparent;\r\n    border: none;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  &:hover {\r\n    text-shadow: 0px 0px 2px #fff;\r\n  }\r\n\r\n  i {\r\n    font-size: 20px;\r\n    display: inline-block;\r\n    width: 34px;\r\n    height: 26px;\r\n    margin-right: 5px;\r\n    color: #e1e2c7;\r\n    text-align: center;\r\n  }\r\n\r\n  a.active {\r\n    background-color: #fff;\r\n    border-radius: 1000px;\r\n    transition: .1s;\r\n    color: #1b5740;\r\n    font-weight: 600;\r\n  }\r\n\r\n  a.active i {\r\n    color: #338f6c;\r\n  }\r\n  \r\n`;\r\n\r\nexport default App;","// eslint-disable-next-line\r\nimport React, { useState, useContext } from 'react';\r\nimport Styled from 'styled-components';\r\nimport Menu from './Menu';\r\nimport { Context } from '../App';\r\n\r\nconst Component = ({ programName }) => {\r\n  \r\n  const { menus } = useContext(Context);\r\n\r\n  return (\r\n    <Header>\r\n      <Logo>{ programName }</Logo>\r\n\r\n      <Menu\r\n        menuCategory={ 'main' }\r\n        menus={ menus.main }\r\n      />\r\n      <Menu\r\n        menuCategory={ 'sub' }\r\n        menus={ menus.sub }\r\n      />\r\n\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst Header = Styled.div`\r\n  width: 200px;\r\n  height: 100%;\r\n  color: #fff;\r\n  float: left;\r\n  padding: 10px 20px 10px 10px;\r\n`;\r\nconst Logo = Styled.h1`\r\n  width: 100%;\r\n  height: 50px;\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  line-height: 60px;\r\n  user-select: none;\r\n  text-align: center;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 30px;\r\n  border-bottom: 1px solid #eeeeee50;\r\n  font-family: 'Baloo Tammudu 2', cursive;\r\n\r\n  b {\r\n    font-weight: 500;\r\n    font-family: 'Baloo Tammudu 2', cursive;\r\n  }\r\n`;\r\n\r\nexport default Component;","import React, { useState, useCallback, useEffect } from 'react';\nimport Styled from 'styled-components';\n\nconst Home = () => {\n    \n    return (\n        <>\n            <Title>Home</Title>\n            <div></div>\n        </>\n    )\n}\n\nexport default Home;\nconst Title = Styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    font-family: 'Baloo Tammudu 2', cursive;\n    border-bottom: 1px solid #eee;\n    white-space: nowrap;\n`;","import React, { useContext } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { Context } from '../../../App';\r\n\r\nconst Log = ({ logData }) => {\r\n\r\n  const _context = useContext(Context);\r\n  \r\n  return (\r\n    <LogLi>\r\n      <div>{ logData?.id }</div>\r\n      <div>{ logData?.date }</div>\r\n      <div>{ logData?.title }</div>\r\n      <div>{ logData?.category }</div>\r\n      <div>\r\n        {_context.userList.find(\r\n          x => x.sq === logData?.user\r\n        )?.name ?? '정보없음'}\r\n      </div>\r\n      <div>\r\n        {\r\n          logData.reference &&\r\n          logData?.reference.map((data, idx) => {\r\n            return (\r\n              <FontAwesomeIcon \r\n                key={ idx }\r\n                icon={ faUser }\r\n                style={{\r\n                    fontSize: '18px',\r\n                    borderRadius: '50%',\r\n                    width: '26px',\r\n                    height: '26px',\r\n                    padding: '6px',\r\n                    color: '#fff',\r\n                    marginRight: '-8px',\r\n                    border: '1px solid #fff',\r\n                    backgroundColor: _context.colorList[\r\n                      _context.userList.find(\r\n                        x => x.sq === data\r\n                      )?.color ?? 0\r\n                    ]\r\n                }}\r\n                title={\r\n                  _context.userList.find(\r\n                    x => x.sq === data\r\n                  )?.name ?? '정보없음'\r\n                }\r\n              />\r\n            )\r\n          })\r\n        }</div>\r\n    </LogLi>\r\n  )\r\n}\r\n\r\nexport default Log;\r\n\r\nconst LogLi = Styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  div:nth-of-type(1) {width: 8%;}\r\n  div:nth-of-type(2) {width: 12%;}\r\n  div:nth-of-type(3) {width: 30%;}\r\n  div:nth-of-type(4) {width: 15%;}\r\n  div:nth-of-type(5) {width: 15%;}\r\n  div:nth-of-type(6) {width: 20%;}\r\n  div {\r\n    height: 100%;\r\n    padding: 14px 0;\r\n    font-size: 13px;\r\n    color: #222;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    padding-right: 10px;\r\n  }\r\n`;","import Styled, { keyframes } from 'styled-components';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <LoadingLi>\r\n      <Circle>\r\n        <InCircle />\r\n      </Circle>\r\n    </LoadingLi>\r\n  )\r\n}\r\n\r\nexport default Loading;\r\n\r\nconst CircleRotate = keyframes`\r\n  to {\r\n    transform: rotate(0deg);\r\n  }\r\n  from {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nconst LoadingLi = Styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n  letter-spacing: 2px;\r\n  color: #777;\r\n  font-size: 14px;\r\n`;\r\nconst Circle = Styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background: conic-gradient(#fff, #338f6c80 10% 30%, #fff);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation: ${CircleRotate} 1s infinite linear;\r\n`;\r\nconst InCircle = Styled.div`\r\n  width: 90px;\r\n  height: 90px;\r\n  background: #fff;\r\n  border: none;\r\n  border-radius: 50%;\r\n`;","const $useArray = (obj = {}) => {\r\n    let _arr = [];\r\n    let _temp = Object.entries(obj);\r\n    if (!_temp) return [];\r\n    _temp.forEach((data) => {\r\n      _arr.push(data[1]);\r\n    });\r\n    return _arr;\r\n}\r\n\r\nexport default $useArray;","const $useStringDate = (date) => {\r\n  let Y = String(date.getFullYear());\r\n  let M = String(date.getMonth()).length === 1 ? '0' + String(date.getMonth() + 1) : String(date.getMonth() + 1);\r\n  let D = String(date.getDate()).length === 1 ? '0' + String(date.getDate()) : String(date.getDate());\r\n  let h = String(date.getHours()).length === 1 ? '0' + String(date.getHours()) : String(date.getHours());\r\n  let m = String(date.getMinutes()).length === 1 ? '0' + String(date.getMinutes()) : String(date.getMinutes());\r\n  let s = String(date.getSeconds()).length === 1 ? '0' + String(date.getSeconds()) : String(date.getSeconds());\r\n  return `${Y}-${M}-${D} ${h}:${m}:${s}`;\r\n}\r\n\r\nexport default $useStringDate;","export const $useGet = (url = '', callback) => {\r\n  let data = [];\r\n  fetch(url).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(resData => {\r\n    data = resData ?? [];\r\n    callback({data: data});\r\n  });\r\n}\r\n\r\nexport const $usePost = (url = '', newData, callback) => {\r\n  let data = [];\r\n  fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify(newData)\r\n  }).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(() => {\r\n    data = newData;\r\n    callback({data: data});\r\n  })\r\n}\r\n\r\nexport const $usePut = (url = '', newData, callback) => {\r\n  let data = [];\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(newData)\r\n  }).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(() => {\r\n    data = newData;\r\n    callback({data: data});\r\n  })\r\n}\r\n\r\nexport const $useDelete = (url = '', callback) => {\r\n  fetch(url, {\r\n    method: 'DELETE'\r\n  }).then(res => {\r\n    if (res.status !== 200) {\r\n      console.error(`${url} Server Error`);\r\n      return;\r\n    }\r\n    return res.json();\r\n  }).then(() => {\r\n    callback();\r\n  })\r\n}","import React, { useContext } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { Context } from '../../App';\r\n\r\nconst CommonModal = ({ width = 400, height = 200, title = '무제', modal = <></>, getData, setData }) => {\r\n  let Modal = modal;\r\n  const _context = useContext(Context);\r\n\r\n  const ModalClose = () => {\r\n    _context.setModalOpen(false)\r\n  }\r\n  \r\n  if (!_context.modalOpen) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BlackBg onClick={ ModalClose } />\r\n      <Pop width={width} height={height}>\r\n        <Title bgColor={_context.mainColor}>\r\n          { title }\r\n          <Xbtn onClick={ ModalClose }/>\r\n        </Title>\r\n        <Contents>\r\n          <Modal getData={getData} setData={setData} />\r\n        </Contents>\r\n      </Pop>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CommonModal;\r\n\r\nconst BlackBg = Styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #00000050;\r\n  z-index: 5;\r\n`;\r\nconst Pop = Styled.div`\r\n  width: ${({width}) => width + 'px'};\r\n  height: ${({height}) => height + 'px'};\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  z-index: 10;\r\n`;\r\nconst Title = Styled.h2`\r\n  font-size: 16px;\r\n  height: 44px;\r\n  padding: 0 10px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n  background: ${({bgColor}) => bgColor};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst degDir = (deg) => `\r\n  content: '';\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: #fff;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%) rotate(${deg}deg);\r\n`;\r\n\r\nconst Xbtn = Styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  &::before {\r\n    ${degDir(45)}\r\n  }\r\n  &::after {\r\n    ${degDir(-45)}\r\n  }\r\n\r\n\r\n  &:hover::before, &:hover::after {\r\n    background-color: #aaa;\r\n  }\r\n  &:active::before, &:active::after {\r\n    background-color: #888;\r\n  }\r\n`;\r\nconst Contents = Styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 44px);\r\n  padding: 10px;\r\n  display: block;\r\n  position: relative;\r\n  overflow: auto;\r\n`;","import React, { useCallback, useContext, useRef } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { Context } from './../../App';\r\nimport { $usePost } from './../../hook/useFirebase';\r\nimport { $useStringDate } from '../../hook';\r\n\r\nconst AddWorkLogModal = ({getData, setData}) => {\r\n\r\n  const titleInput = useRef(null);\r\n  const categoryInput = useRef(null);\r\n  const contentsInput = useRef(null);\r\n\r\n  const _context = useContext(Context);\r\n\r\n  const _POST_WORKLOG = useCallback(() => {\r\n    let category,date,id,reference,title,contents,user;\r\n    category = categoryInput.current.value;\r\n    date = $useStringDate(new Date());\r\n    id = getData.length === 0 ? 20001 : getData[getData.length - 1].id + 1;\r\n    reference = []; // 임시\r\n    title = titleInput.current.value;\r\n    contents = contentsInput.current.value;\r\n    user = 10001; // 임시\r\n\r\n    $usePost(`${_context.databaseURL}/workLog/worklog.json`, {\r\n      category: category,\r\n      date: date,\r\n      id: id,\r\n      reference: reference,\r\n      title: title,\r\n      contents: contents,\r\n      user: user\r\n    }, ({data}) => {\r\n      console.log(data);\r\n      setData((before) => {\r\n        let _temp = [...before];\r\n        _temp.push(data);\r\n        return _temp;\r\n      });\r\n      _context.setModalOpen(false);\r\n    });\r\n  }, [_context, getData, setData]);\r\n\r\n  return (\r\n    <>\r\n      <Line>\r\n        보고종류:\r\n        <select ref={categoryInput}>\r\n          <option value=\"일일업무\">일일업무</option>\r\n          <option value=\"주간업무\">주간업무</option>\r\n          <option value=\"월간업무\">월간업무</option>\r\n        </select>\r\n      </Line>\r\n      <Line>\r\n        제목: <input ref={titleInput} type=\"text\" />\r\n      </Line>\r\n      <Line>\r\n        내용: <input ref={contentsInput} type=\"text\" />\r\n      </Line>\r\n      <button onClick={_POST_WORKLOG}>등록</button>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddWorkLogModal;\r\n\r\nconst Line = Styled.div`\r\n  padding: 10px 0;\r\n`;","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport Styled from 'styled-components';\nimport { Context } from './../../App';\nimport Log from './WorkLog/Log';\nimport Loading from '../Loading';\nimport { $useArray } from '../../hook';\nimport { $useGet } from '../../hook/useFirebase';\nimport CommonModal from '../modal/CommonModal';\nimport AddWorkLogModal from '../modal/AddWorkLogModal';\n\nconst WorkLog = () => {\n  \n  const _context = useContext(Context);\n  const [workLog, setWorkLog] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const _GET_WORKLOG = useCallback(() => {\n    $useGet(`${_context.databaseURL}/workLog/worklog.json`, ({data}) => {\n      setWorkLog($useArray(data));\n      setLoading(false);\n    })\n  }, [_context.databaseURL]);\n\n  const addBoardBtnClick = useCallback(() => {\n    _context.setModalOpen(true);\n  }, [_context]);\n\n  useEffect(() => {\n    _GET_WORKLOG();\n  }, [_GET_WORKLOG]);\n\n  return (\n    <>\n      <CommonModal\n        width={600}\n        height={700}\n        title={'업무일지 작성'} \n        modal={AddWorkLogModal} \n        getData={workLog}\n        setData={setWorkLog} \n      />\n      <Title>Work Log Board <AddBtn onClick={addBoardBtnClick}/></Title>\n      <LogListHead>\n        <div>ID</div>\n        <div>Date</div>\n        <div>Title</div>\n        <div>Category</div>\n        <div>User</div>\n        <div>Reference</div>\n      </LogListHead>\n      <LogListBody>\n        { \n          loading ? <Loading /> : \n          workLog.map((data) => <Log logData={ data } key={ data.id } />)\n        }\n      </LogListBody>\n    </>\n  )\n}\n\nexport default WorkLog;\n\nconst Title = Styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  font-family: 'Baloo Tammudu 2', cursive;\n  border-bottom: 1px solid #eee;\n  white-space: nowrap;\n`;\nconst AddBtn = Styled.button`\n  width: 30px;\n  height: 30px;\n  float: right;\n  position: relative;\n  border: none;\n  border-radius: 4px;\n  background-color: #338f6c;\n  ::before {\n    content: '';\n    width: 60%;\n    height: 2px;\n    background-color: #fff;\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  ::after {\n    content: '';\n    width: 60%;\n    height: 2px;\n    background-color: #fff;\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(90deg);\n  }\n  :hover {background-color: #359773;}\n  :active {background-color: #2e8162;}\n`;\nconst LogListHead = Styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  border-bottom: 1px solid #eee;\n  div:nth-of-type(1) {width: 8%;}\n  div:nth-of-type(2) {width: 12%;}\n  div:nth-of-type(3) {width: 30%;}\n  div:nth-of-type(4) {width: 15%;}\n  div:nth-of-type(5) {width: 15%;}\n  div:nth-of-type(6) {width: 20%;}\n  div {\n    height: 100%;\n    padding: 20px 0 10px;\n    font-size: 12px;\n    color: #555;\n    letter-spacing: 1px;\n  }\n`;\nconst LogListBody = Styled.ul`\n  width: 100%;\n  height: calc(100% - 38px - 48px);\n  overflow: auto;\n`;\n","import React from 'react';\nimport Styled from 'styled-components';\n\nconst UserList = () => {\n    return (\n        <>\n            <Title>User List</Title>\n        </>\n    )\n}\n\nexport default UserList;\nconst Title = Styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    font-family: 'Baloo Tammudu 2', cursive;\n    border-bottom: 1px solid #eee;\n    white-space: nowrap;\n`;","import React from 'react';\r\nimport Styled from 'styled-components';\r\n\r\nconst Support = () => {\r\n    return (\r\n        <>\r\n            <Title>Support Board</Title>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Support;\r\nconst Title = Styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    font-family: 'Baloo Tammudu 2', cursive;\r\n    border-bottom: 1px solid #eee;\r\n    white-space: nowrap;\r\n`;","import React from 'react';\nimport Styled from 'styled-components';\n\nconst Setting = () => {\n    return (\n        <>\n            <Title>Setting</Title>\n        </>\n    )\n}\n\nexport default Setting;\nconst Title = Styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    font-family: 'Baloo Tammudu 2', cursive;\n    border-bottom: 1px solid #eee;\n    white-space: nowrap;\n`;","import React, { useEffect } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Home, WorkLog, UserList, Support, Setting } from './contents/';\r\n\r\nconst Contents = ({ activeMenu }) => {\r\n  return (\r\n    <Main>\r\n      <Switch>\r\n        <Route path={'/'} exact component={Home} />\r\n        <Route path={'/WorkLog'} component={WorkLog} />\r\n        <Route path={'/UserList'} component={UserList} />\r\n        <Route path={'/Support'} component={Support} />\r\n        <Route path={'/Setting'} component={Setting} />\r\n        <Route component={() => <>페이지가 없습니다.</>} />\r\n      </Switch>\r\n    </Main>\r\n  )\r\n}\r\n\r\nconst Main = Styled.div`\r\n  width: calc(100% - 200px);\r\n  height: 100%;\r\n  float: left;\r\n  background: #fff;\r\n  border-radius: 20px;\r\n  padding: 14px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default Contents;","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport Styled from 'styled-components';\nimport { SideMenu, Contents } from './component';\nimport { $useArray } from './hook/';\nimport { faHome, faUser, faClipboard, faBell, faCogs } from '@fortawesome/free-solid-svg-icons';\nimport { $useGet } from './hook/useFirebase';\n\nexport const Context = React.createContext({});\nconst databaseURL = `https://sanguk-db-default-rtdb.firebaseio.com`;\nconst colorList = ['#B71C1C', '#FF6600', '#FFD600', '#00C853', '#338f6c', '#0099FF', '#6200EA', '#FF0084', '#3E2723', '#212121'];\n\nconst Component = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [mainColor, setMainColor] = useState('#338f6c');\n  const [programName, setProgramName] = useState('Work Station');\n  const [menus, setMenus] = useState({\n    main: [\n      {id: 0, name: 'Home', icon: faHome, link: '/'},\n      {id: 1, name: 'Work Log', icon: faClipboard, link: '/WorkLog'},\n      {id: 2, name: 'User List', icon: faUser, link: '/UserList'}\n    ],\n    sub: [\n      {id: 3, name: 'Support', icon: faBell, link: '/Support'},\n      {id: 4, name: 'Setting', icon: faCogs, link: '/Setting'}\n    ]\n  });\n  const [userList, setUserList] = useState([]);\n\n  const _GET_USERLIST = useCallback(() => {\n    $useGet(`${databaseURL}/workLog/userList.json`, ({data}) => {\n      setUserList($useArray(data));\n    })\n  }, []);\n\n  useEffect(() => {\n    _GET_USERLIST();\n  }, [_GET_USERLIST]);\n\n  return (\n    <App mainColor={mainColor}>\n      <Context.Provider\n        value={{\n          databaseURL, colorList,\n          userList, setUserList,\n          menus, setMenus,\n          mainColor, setMainColor,\n          modalOpen, setModalOpen,\n          programName, setProgramName,\n        }}\n      >\n        <title id=\"title\">{programName}</title>\n        {/* modal자리 */}\n        <SideMenu programName={programName} />\n        <Contents />\n      </Context.Provider>\n    </App>\n  );\n  \n}\n\nexport default Component;\n\n// Style\nconst App = Styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  background: ${(props) => props.mainColor};\n  border-radius: 26px;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    text-decoration: none;\n    list-style: none;\n    color: inherit;\n    font-family: 'Noto Sans KR', sans-serif;\n  }\n  html, body, #root, #App {\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  }\n  #root {\n    padding: 20px;\n  }\n  button {\n    cursor: pointer;\n  }\n  ::-webkit-scrollbar {\n    width: 5px;\n    border-radius: 10px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: #eee;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #ccc;\n    border-radius: 10px;\n  }\n  ::-webkit-scrollbar-button {\n    height: 2px;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <GlobalStyle />\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}